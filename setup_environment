#!/bin/bash
#
# script to stop copying dotfiles, and make keeping them in sync between hosts
# that much easier.
# - create soft links between /home/${user}/${dotfile} and the versioned files
# - report what has/has not been done
#
# usage:
#     - ./setup_environment
#
# requirements:
#     - ensure that `DTFS` is exported/defined
#
# export DTFS="/path/to/this/repository"

set -x

if [ $(id -u) -eq 0 ]; then
  echo "you must NOT be root"
  exit 1
fi

# ensure that some directories exist
# ln -s "${DTFS}/dotcofig" ~/.config
mkdir -p ~/.config
mkdir -p ~/bin
mkdir -P ~/Documents/books
mkdir -p ~/Downloads
mkdir -p ~/Pictures/screenshots
mkdir -p ~/local/share/applications
mkdir -p ~/local/share/fonts
mkdir -p ~/logs

# dprint
function dprint() {
  if [[ ! -e "~/.dprint.json" ]]; then
    ln -s "${DTFS}/dotconfig/dprint.json" ~/.dprint.json
  fi
}

# bash environment
function dotbash() {
  for dbf in dotbash/*; do
    echo "~/${dbf/*\//.}"
    if [[ -f "~/${dbf/*\//.}" ]]; then
      # echo 'mv "~/${dbf/*\//.}" "~/${dbf/*\//}-bak"'
      mv "~/${dbf/*\//.}" "~/${dbf/*\//}-bak"
    fi
    if [[ -L "~/${dbf/*\//.}" ]]; then
      # echo 'unlink "~/${dbf/*\//.}"'
      unlink "~/${dbf/*\//.}"
    fi
    # echo 'ln -s "$WORK_DIR/${dbf}" ~/"${dbf/*\//.}"'
    ln -s "$WORK_DIR/${dbf}" ~/"${dbf/*\//.}"
  done
}

# function dotconfig() {
#   for dc in $(find dotconfig/ -mindepth 1 -maxdepth 1 -type d); do
#     if [[ -L ~/.config/$(basename $dc) ]]; then
#       echo "unlink ~/.config/$(basename $dc)"
#       unlink ~/.config/"$(basename $dc)"
#     elif [[ -d ~/.config/$(basename $dc) ]]; then
#       echo "mv ~/.config/$(basename $dc) ~/.config/$(basename $dc)-bak"
#       mv ~/.config/"$(basename $dc)" ~/.config/"$(basename $dc)-bak"
#     fi
#     echo "ln -s $(pwd)/${dc} ~/.config/$(basename $dc)"
#     ln -s "$(pwd)"/"${dc}" ~/.config/"$(basename $dc)"
#   done
# }

# function dotssh() {
#   for ds in $(ls $(pwd)/dotssh); do
#     if [[ -f ~/.ssh/"${ds}" ]]; then
#       echo "mv ~/.ssh/${ds} ~/.ssh/${ds}-bak"
#     elif [[ -L ~/.ssh/"${ds}" ]]; then
#       echo "unlink ~/.ssh/${ds}"
#     fi
#     echo "ln -rs $(pwd)/dotssh/${ds} ~/.ssh/${ds}"
#   done
# }

dotbash
# dotconfig
# dotssh

if [[ "$OSTYPE" =~ ^darwin ]]; then
  echo "darwin"
fi
