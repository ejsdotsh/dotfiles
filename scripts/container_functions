#!/bin/bash

# bash wrappers for container run commands

export EJSB="$SB/ejsdotsh/ejsb"
export ASB="$EJSB/repo/asb"
export LCR="localhost/ejsdotsh"

ansible() {
	podman run -it --rm \
		--userns keep-id:uid=1000,gid=1000 \
		--volume "$HOME"/.ssh/asb:/home/annar/.ssh:U \
		--volume "$ASB":/srv/ansible:U \
		--name ansible \
		"$LCR"/ansible \
		ansible "$@"
}

ansible-config() {
	podman run -it --rm \
		--userns keep-id:uid=1000,gid=1000 \
		--volume "$HOME"/.ssh/asb:/home/annar/.ssh:U \
		--volume "$ASB":/srv/ansible:U \
		--volume "$EJSB"/RESOURCES/img:/srv/ansible/img:U \
		--name ansible_config \
		"$LCR"/ansible \
		ansible-config "$@"
}
alias ansc='ansible-config'

ansible-lint() {
	podman run -it --rm \
		--userns keep-id:uid=1000,gid=1000 \
		--volume "$HOME"/.ssh/asb:/home/annar/.ssh:U \
		--volume "$ASB":/srv/ansible:U \
		--volume "$EJSB"/RESOURCES/img:/srv/ansible/img:U \
		--name ansible_lint \
		"$LCR"/ansible \
		ansible-lint "$@"
}
alias ansl='ansible-lint'

ansible-playbook() {
	podman run -it --rm \
		--userns keep-id:uid=1000,gid=1000 \
		--volume "$HOME"/.ssh/asb:/home/annar/.ssh:U \
		--volume "$ASB":/srv/ansible:U \
		--volume "$EJSB"/RESOURCES/img:/srv/ansible/img:U \
		--name ansible_playbook \
		"$LCR"/ansible \
		ansible-playbook "$@"
}
alias ansp='ansible-playbook'

ansible-shell() {
	podman run -it --rm \
		--userns keep-id:uid=1000,gid=1000 \
		--volume "$HOME"/.ssh/asb:/home/annar/.ssh:U \
		--volume "$ASB":/srv/ansible:U \
		--volume "$EJSB"/RESOURCES/img:/srv/ansible/img:U \
		--name ansible_shell \
		"$LCR"/ansible \
		bash
}
alias ansh='ansible-shell'

ansible-vault() {
	podman run -it --rm \
		--userns keep-id:uid=1000,gid=1000 \
		--volume "$HOME"/.ssh/asb:/home/annar/.ssh:U \
		--volume "$ASB":/srv/ansible:U \
		--name ansible_vault \
		"$LCR"/ansible \
		ansible-vault "$@"
}
alias ansv='ansible-vault'

alias unicorn-control='\
	podman run -d \
		--replace \
		--name unicorn-control \
		--stop-timeout 60 \
		--restart unless-stopped --net host \
		--ulimit nofile=4096:8192 \
		-p 8088:8088 \
		-p 8043:8043 \
		-p 8843:8843 \
		-p 27001:27001/udp -p 19810:19810/udp \
		-p 29810:29810/udp \
		-p 29811:29811 -p 29812:29812 -p 29813:29813 -p 29814:29814 -p 29815:29815 -p 29816:29816 \
		-e MANAGE_HTTP_PORT=8088 \
		-e MANAGE_HTTPS_PORT=8043 \
		-e PGID="508" \
		-e PORTAL_HTTP_PORT=8088 \
		-e PORTAL_HTTPS_PORT=8843 \
		-e PORT_ADOPT_V1=29812 \
		-e PORT_APP_DISCOVERY=27001 \
		-e PORT_DISCOVERY=29810 \
		-e PORT_MANAGER_V1=29811 \
		-e PORT_MANAGER_V2=29814 \
		-e PORT_TRANSFER_V2=29815 \
		-e PORT_RTTY=29816 \
		-e PORT_UPGRADE_V1=29813 \
		-e PUID="508" \
		-e SHOW_SERVER_LOGS=true \
		-e SHOW_MONGODB_LOGS=false \
		-e SSL_CERT_NAME="tls.crt" \
		-e SSL_KEY_NAME="tls.key" \
		-e TZ=Etc/UTC \
		-v omada-data:/opt/tplink/EAPController/data \
		-v omada-logs:/opt/tplink/EAPController/logs \
		mbentley/omada-controller:latest-chromium'

