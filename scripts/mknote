#!/bin/bash

# a bash script to create a daily log

# debugging
## set -exo pipefail

set -e

IN_PATH="$SB/00-in"
DAY_PATH="$SB/10-daily"
WEEK_PATH="$SB/11-weekly"
TODAY=$(date +%Y-%m-%d)
TIMESTAMP=$(date +%Y%m%d%H%M)
WN=$(date +%Y-%V)
YESTERDAY=$(date --date='yesterday' +%F)
TOMORROW=$(date --date='tomorrow' +%F)

mk_file() {

	cd "$SB" || exit 1

	echo "---" >>"$FN"
	echo "title: $TITLE" >>"$FN"
	echo "date: $TODAY" >>"$FN"
	echo "id: $TIMESTAMP" >>"$FN"
	echo "tags:" >>"$FN"
	echo "  - $1" >>"$FN"
	echo "---" >>"$FN"
	echo "<!-- markdownlint-disable MD013 -->" >>"$FN"
	##echo -en "\n" >>"$FN"

	if [[ $1 = "day" ]]; then
		cat <<EEE >>"$FN"

[[$YESTERDAY]] - [[$TOMORROW]]

## intentions and goals

## tasks

- [ ] text

## log

- logs

EEE

	fi

	if [[ $1 = "week" ]]; then
		echo "## weekly summary" >>"$FN"
		echo -en "\n" >>"$FN"
		echo "## weekly review" >>"$FN"
		echo -en "\n" >>"$FN"
		echo "- [ ] text" >>"$FN"
		echo -en "\n" >>"$FN"
	fi

	if [[ $1 = "in" ]]; then
		echo "## subject" >>"$FN"
		echo -en "\n" >>"$FN"
		echo "- [ ] text" >>"$FN"
		echo -en "\n" >>"$FN"
	fi

	# nvim "+ normal Go" "$FN"
	nvim "$FN"
}

case "$1" in
day)
	FN="$DAY_PATH/$TODAY.md"
	TITLE="$TODAY daily log"
	mk_file "day"
	;;

week)
	FN="$WEEK_PATH/$WN.md"
	TITLE="$WN weekly review log"
	mk_file "week"
	;;

in)
	FN="$IN_PATH/$TIMESTAMP.md"
	TITLE="$TIMESTAMP"
	mk_file "in"
	;;

*)
	# print an error
	echo "error: invalid parameter. usage: mknote day|week|in"
	exit 1
	;;

esac

exit 0
