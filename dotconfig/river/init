#!/bin/sh


# for some reason, natural scrolling has to be enabled...
riverctl input pointer-* natural-scroll enabled
riverctl focus-follows-cursor normal
riverctl set-cursor-warp on-focus-change

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view
# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view
# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

# keybindings to spawn stuff
riverctl map normal Super Return spawn kitty
riverctl map normal Super+Shift F spawn firefox
riverctl map normal Super Space spawn fuzzel

# Super+Q to close the focused view
riverctl map normal Super Q close

# Super+Shift+E to exit river
riverctl map normal Super+Shift E exit

# lock and sleep
# riverctl map normal Super+Shift X spawn "/home/ejs/repo/SB/ejsdotsh/dotfiles/scripts/locker.sh"
riverctl map normal Super+Shift X spawn "swaylock"
riverctl map normal Super+Shift S spawn "swaylock && sleep 1; systemctl suspend"

riverctl map normal Super H focus-view left
riverctl map normal Super J focus-view down
riverctl map normal Super K focus-view up
riverctl map normal Super L focus-view right
riverctl map normal Super Tab focus-view next
riverctl map normal Super+Shift Tab focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift H swap left
riverctl map normal Super+Shift J swap down
riverctl map normal Super+Shift K swap up
riverctl map normal Super+Shift L swap right

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Left focus-output left
riverctl map normal Super Right focus-output right

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Left send-to-output left
riverctl map normal Super+Shift Right send-to-output right

# Super+Return to bump the focused view to the top of the layout stack
# riverctl map normal Super Return zoom

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
# riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
# riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
# riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
# riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
# riverctl map normal Super+Alt H move left 100
# riverctl map normal Super+Alt J move down 100
# riverctl map normal Super+Alt K move up 100
# riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
# riverctl map normal Super+Alt+Control H snap left
# riverctl map normal Super+Alt+Control J snap down
# riverctl map normal Super+Alt+Control K snap up
# riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
# riverctl map normal Super+Alt+Shift H resize horizontal -100
# riverctl map normal Super+Alt+Shift J resize vertical 100
# riverctl map normal Super+Alt+Shift K resize vertical -100
# riverctl map normal Super+Alt+Shift L resize horizontal 100

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
# riverctl map normal Super 0 set-focused-tags $all_tags
# riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+F to toggle fullscreen
# riverctl map normal Super F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
# riverctl map normal Super Up    send-layout-cmd rivertile "main-location top"
# riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
# riverctl map normal Super Down  send-layout-cmd rivertile "main-location bottom"
# riverctl map normal Super Left  send-layout-cmd rivertile "main-location left"

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

# DBUS environment
riverctl spawn "dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river"
riverctl spawn "systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river"

riverctl spawn "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
riverctl spawn "wl-paste --type text --watch cliphist store"
riverctl spawn "wl-paste --type images --watch cliphist store"

# output switching
# riverctl spawn kanshi
way-displays > /tmp/way-displays.${XDG_VTNR}.${USER}.log 2>&1 &

# notifications
riverctl spawn mako

# status bar
riverctl spawn waybar
bash /home/ejs/repo/SB/ejsdotsh/dotfiles/scripts/locker.sh

# Make all views with an app-id that starts with "float" and title "foo" start floating.
# riverctl rule-add -app-id 'float*' -title 'foo' float
riverctl rule-add -title 1Password float
riverctl rule-add -title rpi-imager float

# Make all views with app-id "bar" and any title use client-side decorations
# riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 2 -outer-padding 2 &
