### Variables
#
set $laptop eDP-1
set $4kmon DP-1
set $unergokeyboard 1:1:AT_Translated_Set_2_keyboard
set $ergomouse 1133:49290:Logitech_MX_Vertical_Advanced_Ergonomic_Mouse
set $ergokeyboard 10730:258:Kinesis_Advantage2_Keyboard

#set $mplaypause cmus-remote -u
#set $mnext cmus-remote -n
#set $mprev cmus-remote -r

set $brightdown doas brightnessctl set 5%-
set $brightup doas brightnessctl set 5%+
set $sndup amixer -q sset Master 5%+
set $snddown amixer -q sset Master 5%-
set $sndtoggle amixer -q sset Master toggle

####
## theme
####
include catppuccin-mocha

## fonts
font pango:"Fira Code Regular Nerd Font Complete" Medium 11

# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# terminal emulator
set $term kitty

# mako notifier
exec mako --config ~/.config/mako/config

# application launcher
set $menu tofi-run | xargs swaymsg exec --

# load systemd & dbus
include /etc/sway/config.d/*

### Output configuration
# You can get the names of your outputs by running: swaymsg -t get_outputs

output * background $base solid_color
# don't scale the output
output * scale 1

## output $laptop scale 1
## output $4kmon scale 1
output $4kmon mode 3840x2160

# "clamshell" mode
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable
# make sure that reloading the sway config doesn't re-enable $laptop
#exec_always ~/.config/sway/scripts/clamshell.sh

### idle configuration
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 3600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

### input configuration
#
input "type:touchpad" {
  dwt enabled
  pointer_accel 0.3
  accel_profile adaptive
  natural_scroll enabled
  middle_emulation enabled
  scroll_factor 0.5
}

input $unergokeyboard {
  xkb_options caps:swapescape
}

input $ergokeyboard {
  xkb_options ctrl:swap_lalt_lctl,ctrl:rctrl_ralt
  #xkb_options ctrl:swap_rctl_ralt
}

input $ergomouse {
  dwt enabled
  pointer_accel 0.3
  accel_profile adaptive
  natural_scroll enabled
  middle_emulation enabled
  scroll_factor 0.5
}

### Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Shift+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+Space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

# exit dialogue
set $mode_system system (e)xit, (l)ock, (s)leep, (r)eboot, (p)oweroff
mode "$mode_system" {
  bindsym l exec swaylock -f -c 000000, mode "default"
  bindsym e exec swaymsg exit, mode "default"
  bindsym r exec systemctl reboot, mode "default"
  bindsym p exec systemctl poweroff, mode "default"
  bindsym s exec systemctl suspend, mode "default"
  # back to normal: esc or enter
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+Shift+x mode "$mode_system"

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

#--------------------------mediakeys keybind
    bindsym Print exec $scwhole
    bindsym Shift+Print exec $scselect
    bindsym Mod4+Print exec $scshare

    bindsym --locked XF86MonBrightnessDown exec $brightdown
    bindsym --locked XF86MonBrightnessUp exec $brightup

    bindsym --locked XF86AudioRaiseVolume exec $sndup
    bindsym --locked XF86AudioLowerVolume exec $snddown
    bindsym --locked XF86AudioMute exec $sndtoggle

#bindsym --locked XF86AudioPlay exec $mplaypause
#bindsym --locked XF86AudioNext exec $mnext
#bindsym --locked XF86AudioPrev exec $mprev

#
# Layout stuff:
#
    bindsym $mod+Ctrl+b splith
    bindsym $mod+Ctrl+v splitv

    # Switch the current container between different layout styles
#    bindsym $mod+s layout stacking
#    bindsym $mod+w layout tabbed
#    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Ctrl+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# workspace 8 output $laptop
# workspace 9 output $laptop

#
# Status Bar:
#
bar {
  swaybar_command waybar
}

# WAYLAND DEFAULT FLOATING WINDOWS:
# for_window [app_id="org.pwmt.zathura"] floating enable, inhibit_idle focus
for_window [app_id="monitor"] floating enable

# ASSIGN PROGRAMS TO WORKSPACE:
assign [app_id="musicplayer"] â†’ number 9

